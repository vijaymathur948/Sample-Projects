{"version":3,"sources":["components/group_policy_administrative_template/index.jsx","components/accidental_developer/index.jsx","logo.svg","components/routerPath.js","components/main.jsx","App.js","reportWebVitals.js","index.js"],"names":["index","removeBackground","id","setTimeout","document","getElementById","classList","remove","projectTitle","projectDescription","referenceUrl","developer","createdAt","variant","style","backgroundColor","height","Brand","fontSize","icons","home","magnifyingGlass","uniqueId","item","toLowerCase","substr","length","replace","card","input","data","map","obj","className","Header","textShadow","fontWeight","title","items","innerIndex","Item","action","href","projectInfo","target","onClick","src","alt","sm","borderTop","marginLeft","this","rel","navbar","body","footer","Component","linktitle","originalName","linkItems","list","index_1","titleUrl","LinkTitle","styled","h3","margin","index_2","HoverOnItems","div","itemsUrl","paddingLeft","textDecoration","color","lineHeight","marginRight","width","padding","type","placeholder","getLinks","sidebar","routerPath","routes","require","default","routesList","main","Object","keys","key","window","open","Navbar","bg","logo","CardColumns","Card","text","Body","Badge","Title","prototype","Text","to","routerpath","App","exact","path","component","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1867460f.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Navbar, Button, Card, ListGroup, Row, Col } from \"react-bootstrap\"\r\nimport icons from \"glyphicons\"\r\nimport data from \"./links.json\"\r\n\r\nclass index extends Component {\r\n  projectInfo() {\r\n    return {\r\n      projectTitle: \"Group Policy Templates\",\r\n      projectDescription: \"A simple template for collections of items\",\r\n      referenceUrl: \"https://admx.help/\",\r\n      developer: \"Vijay Mathur\",\r\n      createdAt: \"24-1-2021\",\r\n    }\r\n  }\r\n  navbar() {\r\n    return (\r\n      <Navbar\r\n        variant='dark'\r\n        style={{ backgroundColor: \"rgb(39,128,227)\", height: \"60px\" }}\r\n      >\r\n        <Navbar.Brand>\r\n          <span style={{ fontSize: \"30px\" }}>{icons.home}</span>\r\n          <span style={{ fontSize: \"15px\" }}>Group Policy Home</span>\r\n        </Navbar.Brand>\r\n        <Button>{icons.magnifyingGlass}</Button>\r\n      </Navbar>\r\n    )\r\n  }\r\n  removeBackground = id => {\r\n    setTimeout(() => document.getElementById(id).classList.remove(\"active\"), 1)\r\n  }\r\n\r\n  body() {\r\n    const uniqueId = (item, index) => {\r\n      var id =\r\n        item\r\n          .toLowerCase()\r\n          .substr(0, item.length - 1)\r\n          .replace(/ /g, \"-\") +\r\n        \"_\" +\r\n        index\r\n      return id\r\n    }\r\n    const card = input => {\r\n      return (\r\n        data &&\r\n        data.map((obj, index) => {\r\n          return index % 2 === input ? (\r\n            <Card className='mb-3' key={index}>\r\n              <Card.Header style={{ textShadow: \"0 0 0\", fontWeight: \"400\" }}>\r\n                {obj.title}\r\n              </Card.Header>\r\n              <ListGroup variant='flush'>\r\n                {obj.items.map((item, innerIndex) => {\r\n                  return (\r\n                    <ListGroup.Item\r\n                      key={innerIndex}\r\n                      action\r\n                      href={\r\n                        `${this.projectInfo()?.referenceUrl}?category=` +\r\n                        item.replace(/ /g, \"\")\r\n                      }\r\n                      target='_next'\r\n                      id={uniqueId(item, index)}\r\n                      onClick={() => {\r\n                        var id = uniqueId(item, index)\r\n                        this.removeBackground(id)\r\n                      }}\r\n                    >\r\n                      {item}\r\n                    </ListGroup.Item>\r\n                  )\r\n                })}\r\n              </ListGroup>\r\n            </Card>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        })\r\n      )\r\n    }\r\n    return (\r\n      <div className='mt-3'>\r\n        <h1 className='mb-4' style={{ fontSize: \"40px\", fontWeight: \"100\" }}>\r\n          <img\r\n            src='https://admx.help/img/Group_Policy_Central.png'\r\n            alt='Admin Icon'\r\n            className='mr-2'\r\n          />\r\n          Group Policy Administrative Templates Catalog\r\n        </h1>\r\n        <Row>\r\n          <Col sm={5}>{card(0)}</Col>\r\n          <Col sm={5}>{card(1)}</Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n  footer() {\r\n    return (\r\n      <div\r\n        className='mt-5'\r\n        style={{\r\n          height: \"50px\",\r\n          backgroundColor: \"rgb(245,245,245)\",\r\n          borderTop: \"2px solid lightblue \",\r\n        }}\r\n      >\r\n        <a\r\n          style={{ marginLeft: \"110px\", fontSize: \"15px\" }}\r\n          href={this.projectInfo()?.referenceUrl}\r\n          rel=''\r\n        >\r\n          Â© Group Policy Administrative Templates\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.navbar()}\r\n        <div className='container'>{this.body()}</div>\r\n        {this.footer()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default index\r\n","import React, { Component } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nclass index extends Component {\r\n  projectInfo() {\r\n    return {\r\n      projectTitle: \"The Accidental Developer\",\r\n      projectDescription: \"This is the first Sample of someone's blog\",\r\n      referenceUrl:\r\n        \"https://osric.com/chris/accidental-developer/2016/04/powershell-ellipsis-dot-dot-dot/\",\r\n      developer: \"Vijay Mathur\",\r\n      createdAt: \"16-1-2021\",\r\n    }\r\n  }\r\n  getLinks() {\r\n    const links = [\r\n      { linktitle: \"Pages\", originalName: \"\", linkItems: [\"About\"] },\r\n      {\r\n        linktitle: \"CATEGORIES\",\r\n        originalName: \"category\",\r\n        linkItems: [\r\n          \"Accessibility\",\r\n          \"ansible\",\r\n          \"authors\",\r\n          \"Best Practices\",\r\n          \"ColdFusion\",\r\n          \"CSS\",\r\n          \"Debugging\",\r\n          \"Docker\",\r\n          \"Facebook\",\r\n          \"Flash\",\r\n          \"Games\",\r\n          \"Git\",\r\n          \"Google\",\r\n          \"Javascript\",\r\n          \"Monitoring\",\r\n          \"MySQL\",\r\n          \"Oracle\",\r\n          \"perl\",\r\n          \"php\",\r\n          \"powershell\",\r\n          \"Process\",\r\n          \"python\",\r\n          \"Scala\",\r\n          \"security\",\r\n          \"seo\",\r\n          \"Sharepoint\",\r\n          \"SysAdmin\",\r\n          \"Testing\",\r\n          \"Tips & Tricks\",\r\n          \"twitter\",\r\n          \"Uncategorized\",\r\n          \"User Interface\",\r\n          \"Video\",\r\n          \"wordpress\",\r\n          \"Workstation\",\r\n          \"xml\",\r\n        ],\r\n      },\r\n    ]\r\n    const baseUrl = \"https://osric.com/chris/accidental-developer/\"\r\n\r\n    return links.map((list, index_1) => {\r\n      const titleUrl =\r\n        baseUrl +\r\n        (list.originalName !== \"\" ? list.originalName.toLowerCase() + \"/\" : \"\")\r\n\r\n      const LinkTitle = styled.h3`\r\n        margin-bottom: 20px;\r\n      `\r\n      return (\r\n        <div style={{ margin: \"40px 10px\" }} key={index_1}>\r\n          <LinkTitle>\r\n            <b>{list.linktitle}</b>\r\n          </LinkTitle>\r\n\r\n          {list.linkItems.map((items, index_2) => {\r\n            const HoverOnItems = styled.div`\r\n              &:hover {\r\n                color: lightblue;\r\n              }\r\n              cursor: pointer;\r\n            `\r\n\r\n            const itemsUrl = titleUrl + items.toLowerCase()\r\n            return (\r\n              <div\r\n                key={index_2}\r\n                style={{\r\n                  paddingLeft: \"30px\",\r\n                }}\r\n              >\r\n                <a\r\n                  href={itemsUrl}\r\n                  style={{\r\n                    fontSize: \"18px\",\r\n                    fontWeight: 500,\r\n                    textDecoration: \"none\",\r\n                    color: \"white\",\r\n                    lineHeight: \"1\",\r\n                  }}\r\n                >\r\n                  <HoverOnItems>{items}</HoverOnItems>\r\n                </a>\r\n                <hr\r\n                  style={{\r\n                    borderTop: \"1px solid white\",\r\n                    marginRight: \"200px\",\r\n                    width: \"200px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  sidebar() {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"rgb(40,79,104)\",\r\n          width: \"40%\",\r\n          color: \"white\",\r\n          padding: \"50px\",\r\n          fontSize: \"40px\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        The Accidental Developer\r\n        <div\r\n          style={{\r\n            color: \"rgb(189,201,209)\",\r\n            padding: \"10px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          <p>What if Gregor Samsa awoke a computer programmer?</p>\r\n          <input type='text' placeholder=' Search  ...' />\r\n        </div>\r\n        {this.getLinks()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \"rgb(230,238,244)\" }}>\r\n        {this.sidebar()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default index\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const routerPath = () => { \nconst routes = {} \nroutes[\"/group_policy_administrative_template/\"] = require(\"./group_policy_administrative_template/\").default \nroutes[\"/accidental_developer/\"] = require(\"./accidental_developer/\").default \nreturn routes }\nexport default routerPath\r\n","import React, { Component } from \"react\"\r\nimport logo from \"../logo.svg\"\r\nimport { Card, Navbar, CardColumns, Badge } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport routerPath from \"./routerPath\"\r\n\r\nconst routesList = routerPath()\r\n\r\nclass main extends Component {\r\n  openAll() {\r\n    Object.keys(routesList).map((key, index) => window.open(key, key))\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar bg='dark' variant='dark'>\r\n          <Navbar.Brand>\r\n            <img alt='' src={logo} width='30' height='30' /> REACT BASED SAMPLES\r\n            PROJECTS\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n        <CardColumns className='mt-3'>\r\n          {Object.keys(routesList).map((key, index) => (\r\n            <Card bg='dark' text='white' className='text-center' key={index}>\r\n              <Card.Body>\r\n                <h1>\r\n                  <Badge variant='success'>{index + 1}</Badge>\r\n                </h1>\r\n                <Card.Title>\r\n                  {routesList[key]?.prototype?.projectInfo()?.projectTitle}\r\n                  's Projects\r\n                </Card.Title>\r\n                <Card.Text>\r\n                  {\r\n                    routesList[key]?.prototype?.projectInfo()\r\n                      ?.projectDescription\r\n                  }\r\n                </Card.Text>\r\n                <div>\r\n                  <Link\r\n                    to={key}\r\n                    target='_target'\r\n                    className='btn btn-outline-light mr-3'\r\n                  >\r\n                    Sample Component\r\n                  </Link>\r\n                  <a\r\n                    href={\r\n                      routesList[key]?.prototype?.projectInfo()?.referenceUrl\r\n                    }\r\n                    target='_target'\r\n                    className='btn btn-outline-light'\r\n                  >\r\n                    Original Component\r\n                  </a>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </CardColumns>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default main\r\n","import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport Main from \"./components/main\"\r\nimport routerpath from \"./components/routerPath\"\r\nconst routesList = routerpath()\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Route exact path='/' component={Main} />\r\n\r\n        {Object.keys(routesList).map((keys, index) => (\r\n          <Route key={index} exact path={keys} component={routesList[keys]} />\r\n        ))}\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}